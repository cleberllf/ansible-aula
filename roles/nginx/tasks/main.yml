---

# tasks file for nginx
- name: YUM | Installing epel-repository {{ ansible_distribution }}
  ansible.builtin.shell: sudo amazon-linux-extras install epel -y
  when: ansible_distribution == 'Amazon'

- name: SYSTEM | Configuring NGINX repository on {{ ansible_distribution }}
  ansible.builtin.copy:
    src: nginx.repo
    dest: /etc/yum.repos.d/nginx.repo
    owner: root
    group: root
    mode: '0644'
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Rocky'
  tags: repo_nginx

- name: SYSTEM | Configuring NGINX repository on {{ ansible_distribution }}
  ansible.builtin.copy:
    src: nginx_amzn2.repo
    dest: /etc/yum.repos.d/nginx.repo
    owner: root
    group: root
    mode: '0644'
  when: ansible_distribution == 'Amazon'
  tags: repo_nginx

- name: SYSTEM | Updating SYSTEM
  ansible.builtin.yum: name=* state=latest update_cache=yes
  tags: update_system

- name: NGINX | Installing NGINX (latest version)
  ansible.builtin.yum:
    name: ['nginx.x86_64']
    state: latest
  tags: install_nginx

- name: NGINX | Creating directories
  ansible.builtin.file: path={{ item }} state=directory mode=0700 owner=root group=root
  with_items:
    - /etc/nginx/features
    - /etc/nginx/cert
    - /etc/nginx/vhosts.d

  - name: NGINX | Copying files
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
    force: yes
    backup: yes
  with_items:
    - { src: 'nginx.conf', dest: '/etc/nginx/nginx.conf' }
    - { src: 'gzip.conf', dest: '/etc/nginx/features/gzip.conf' }
    - { src: 'ssl.conf', dest: '/etc/nginx/features/ssl.conf' }
    - { src: 'vhost.example', dest: '/etc/nginx/vhosts.d/vhost.example' }
    - { src: 'dhparam.pem', dest: '/etc/nginx/cert/dhparam.pem' }
  tags: copy_nginx_files

  - name: NGINX | Creating NGINX root directory
    ansible.builtin.file:
      path: {{ root_dir }}
      state: directory
      mode: 0755
      owner: nginx
      group: nginx
      recurse: yes
  
  - name: NGINX | Extracting static website (template)
    ansible.builtin.unarchive:
      src: website.tar.gz
      dest: "{{ root_dir }}"
      owner: nginx
      group: nginx
      remote_src: no ## Opcional - Default is no
    notify: Restarting nginx
  
  ...
